import numpy as np

# Input a number
a = int(input("Enter a Number (0-9): "))

# Define step function properly
step_function = lambda x: 1 if x >= 0 else 0

# Training dataset
training_dataset = [
    {'input': [1, 1, 0, 0, 0, 0], 'label': 1},
    {'input': [1, 1, 0, 0, 0, 1], 'label': 0},
    {'input': [1, 1, 0, 0, 1, 0], 'label': 1},
    {'input': [1, 1, 0, 1, 1, 1], 'label': 0},
    {'input': [1, 1, 0, 1, 0, 0], 'label': 1},
    {'input': [1, 1, 0, 1, 0, 1], 'label': 0},
    {'input': [1, 1, 0, 1, 1, 0], 'label': 1},
    {'input': [1, 1, 0, 1, 1, 1], 'label': 0},
    {'input': [1, 1, 1, 0, 0, 0], 'label': 1},
    {'input': [1, 1, 1, 0, 0, 1], 'label': 0},
]

# Initialize weights
weight = np.array([0, 0, 0, 0, 0, 1])

# Training loop
for data in training_dataset:
    input_data = np.array(data['input'])
    label = data['label']
    output = step_function(np.dot(input_data, weight))
    error = label - output
    weight += input_data * error

# Prepare input for prediction
input_data = np.array([int(x) for x in f'{a:06b}'])
output = "even" if step_function(np.dot(input_data, weight)) else "odd"

# Display results
print("Before Training Input:", input_data)
print(f"{a} is {output}")
print("After Training Weights:", weight)
